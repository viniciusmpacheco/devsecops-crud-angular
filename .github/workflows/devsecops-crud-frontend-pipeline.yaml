name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - develop

jobs:
  # Fase de Build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/

  # Fase de QA
  qa:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Run unit tests
        run: npm run test

      - name: Run linting
        run: npm run lint

      - name: Run security check
        run: npm audit --production

  # Fase de Delivery
  delivery:
    runs-on: ubuntu-latest
    needs: qa
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Upload to artifact repository
        run: echo "Uploading to artifact repository..."
        # Adicione aqui o comando para enviar artefatos para o repositório (Ex.: AWS S3, Nexus, etc.)

  # Fase de Deploy de Aplicação
  deploy_application:
    runs-on: ubuntu-latest
    needs: delivery
    steps:
      - name: Deploy application
        run: echo "Deploying application to the environment..."
        # Adicione aqui o comando para deploy (Ex.: kubectl apply, terraform, etc.)

  # Fase de Deploy de Monitoramento
  deploy_monitoring:
    runs-on: ubuntu-latest
    needs: deploy_application
    steps:
      - name: Deploy monitoring system
        run: echo "Deploying monitoring tools..."
        # Adicione aqui o comando para deploy de monitoramento (Ex.: Prometheus, Grafana, etc.)

  # Fase de Promoção de Branch
  promote_branch:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' # Verifica se a branch atual é a 'develop'
    needs: deploy_monitoring
    steps:
      - name: Promote to main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git merge develop
          git push origin main
